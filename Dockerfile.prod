# syntax=docker/dockerfile:1.7   # for buildkit cache mounts 

# ---------- build ----------
FROM ubuntu:24.04 AS build
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake ninja-build pkg-config \
    libdrogon-dev libjsoncpp-dev libssl-dev zlib1g-dev libbrotli-dev libc-ares-dev ca-certificates \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /src
COPY CMakeLists.txt ./
COPY src/ src/

RUN cmake -S . -B /build -G Ninja -DCMAKE_BUILD_TYPE=Release \
 && cmake --build /build --target api

# ---------- runtime ----------
FROM ubuntu:24.04 AS runtime
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates libstdc++6 libssl3 zlib1g brotli libc-ares2 curl tini \
 && rm -rf /var/lib/apt/lists/*


RUN useradd -r -u 10001 -g nogroup appuser

WORKDIR /app
COPY --from=build /build/api /app/api

EXPOSE 8080
HEALTHCHECK --interval=15s --timeout=2s --retries=3 CMD curl -fsS http://127.0.0.1:8080/health || exit 1

USER appuser
ENTRYPOINT ["/usr/bin/tini","--"]
CMD ["/app/api","-c","/app/config.json"]